<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="utilities_8h" kind="file" language="C++">
    <compoundname>utilities.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">vector</includes>
    <includes refid="_matrix_8h" local="yes">Matrix.h</includes>
    <includedby refid="lab2_8cpp" local="yes">src/lab2.cpp</includedby>
    <includedby refid="transpose_8h" local="yes">src/transpose.h</includedby>
    <includedby refid="utilities_8cpp" local="yes">src/utilities.cpp</includedby>
    <incdepgraph>
      <node id="55">
        <label>iomanip</label>
      </node>
      <node id="53">
        <label>src/utilities.h</label>
        <link refid="utilities_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>fstream</label>
      </node>
      <node id="58">
        <label>vector</label>
      </node>
      <node id="54">
        <label>iostream</label>
      </node>
      <node id="59">
        <label>Matrix.h</label>
        <link refid="_matrix_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>stdio.h</label>
      </node>
      <node id="60">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="61">
        <label>src/utilities.h</label>
        <link refid="utilities_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>src/transpose.h</label>
        <link refid="transpose_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="utilities_8h_1a393322dd4198de8193e990c2e17ee45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix generate2d</definition>
        <argsstring>(int N)</argsstring>
        <name>generate2d</name>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
<para>Generates an NxN matrix with random int values between 0 and N. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of row/columns </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utilities.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utilities_8h_1ae3516cacceadc6f8133a604d89d1b7c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print2d</definition>
        <argsstring>(Matrix A)</argsstring>
        <name>print2d</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref></type>
          <declname>A</declname>
        </param>
        <briefdescription>
<para>Prints an NxM matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to print</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Prints an NxM matrix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utilities.h" line="19" column="1" bodyfile="src/utilities.cpp" bodystart="5" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="utilities_8h_1a5c2f3af52342f306811aec819d0a9066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writeMatrixToFile</definition>
        <argsstring>(string fileName, Matrix A)</argsstring>
        <name>writeMatrixToFile</name>
        <param>
          <type>string</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref></type>
          <declname>A</declname>
        </param>
        <briefdescription>
<para>Caches a matrix to disk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the cache file to write (replaces contents) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix to cache to disk</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Caches a matrix to disk. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utilities.h" line="24" column="1" bodyfile="src/utilities.cpp" bodystart="17" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="utilities_8h_1a5d4d2e1aca9cbe74b6835b77474c9908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix readMatrixfromFile</definition>
        <argsstring>(string fileName)</argsstring>
        <name>readMatrixfromFile</name>
        <param>
          <type>string</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Reads a matrix into memory from disk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the cache file to read</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Reads a matrix into memory from disk. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utilities.h" line="28" column="1" bodyfile="src/utilities.cpp" bodystart="37" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="utilities_8h_1a8579d4479020051ea68be3fc5370a0f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matricesAreEqual</definition>
        <argsstring>(Matrix A, Matrix B)</argsstring>
        <name>matricesAreEqual</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref></type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref></type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>Compares two matrices to check if all elements are the same. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>The first matrix to compare to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>The second matrix to compare with</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Compares two matrices to check if all elements are the same. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utilities.h" line="33" column="1" bodyfile="src/utilities.cpp" bodystart="59" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/utilities.h"/>
  </compounddef>
</doxygen>
